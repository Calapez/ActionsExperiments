name: Workflow 6 - Generated secrets
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Required for dorny/test-reporter
permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: gradle

    - name: Make .priv directory
      run: mkdir .priv

    - name: Create credentials file
      run: touch .priv/.credentials
      
    - name: Create credentials
      env:
        CREDENTIALS_SECRET: |
         ${{ secrets.CREDENTIALS }}
      run: echo "$CREDENTIALS_SECRET" > .priv/.credentials

    - name: Set env username
      env:
        USERNAME_SECRET: |
         ${{ secrets.CODEARTIFACT_USERNAME }}
      run: echo "CODEARTIFACT_USERNAME=$USERNAME_SECRET" >> $GITHUB_ENV
    - name: Get env username
      run: echo "$CODEARTIFACT_USERNAME"

    - name: Set env auth token
      env:
        AUTH_TOKEN_SECRET: |
         ${{ secrets.CODEARTIFACT_AUTH_TOKEN }}
      run: echo "CODEARTIFACT_AUTH_TOKEN=$AUTH_TOKEN_SECRET" >> $GITHUB_ENV
    - name: Get env auth token
      run: echo "$CODEARTIFACT_AUTH_TOKEN"

    #- name: Create environment variables
     # env:
      #  USERNAME_SECRET: |
       #  ${{ secrets.CODEARTIFACT_USERNAME }}
        #AUTH_TOKEN_SECRET: |
         #${{ secrets.CODEARTIFACT_AUTH_TOKEN }}
      #run: |
       # set CODEARTIFACT_USERNAME="$USERNAME_SECRET"
        #set CODEARTIFACT_AUTH_TOKEN="$AUTH_TOKEN_SECRET"
      
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build debug and preprod apks and run tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: --stacktrace -Dtrace :app:testDebugUnitTest :app:assembleDebug :app:assembleRelease
      env:
        TERM: dumb

    - name: Upload build reports
      if: always() # run this step even if previous step failed
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: app/build/reports

    - name: Test Reports
      uses: dorny/test-reporter@v1
      if: always() # run this step even if previous step failed
      with:
          name: JUnit Tests
          path: app/build/test-results/testDebugUnitTest/TEST-*.xml # Path to test results
          reporter: java-junit # Format of test results
          fail-on-error: false


