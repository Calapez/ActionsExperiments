name: Workflow 4 - Run Unit Tests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Required for dorny/test-reporter
permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: gradle

    - name: Make .faapriv directory
      run: mkdir .priv

    - name: Test 1
      run: ls -la

    - name: Create credentials file
      run: touch .priv/.credentials
      
    - name: Fill credentials file
      env:
        CREDENTIALS_SECRET: |
         ${{ secrets.CREDENTIALS }}
      run: echo "$CREDENTIALS_SECRET" > .priv/.credentials

    - name: Create download secrets file
      run: touch .priv/.download_secrets
      
    - name: Fill download secrets file
      env:
        DOWNLOAD_SECRETS_SECRET: |
         ${{ secrets.DOWNLOAD_SECRETS }}
      run: echo "$DOWNLOAD_SECRETS_SECRET" > .priv/.download_secrets

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build and generate APK
      run: ./gradlew :app:assembleDebug # only using prodDebug variant for now

    - name: Upload APK
      uses: actions/upload-artifact@v3
      if: always() # run this step even if previous step failed
      with:
        name: APK(s) generated
        path: app/build/outputs/apk/

    - name: Run Unit Tests
      run: ./gradlew :app:testDebug # only using prodDebug variant for now

    - name: Upload Test Reports
      uses: dorny/test-reporter@v1
      if: always() # run this step even if previous step failed
      with:
          name: JUnit Tests
          path: app/build/test-results/testDebugUnitTest/TEST-*.xml # Path to test results
          reporter: java-junit # Format of test results
          #fail-on-error: false
