name: Workflow 4 - Run Unit Tests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Required for dorny/test-reporter
permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: gradle

    - name: Make .faapriv directory
      run: mkdir .faapriv

    - name: Test 1
      run: ls -la

    - name: Create credentials file
      run: touch .faapriv/.credentials
      
    - name: Fill credentials file
      env:
        CREDENTIALS_SECRET: |
         ${{ secrets.CREDENTIALS }}
      run: echo "$CREDENTIALS_SECRET" > .faapriv/.credentials

    - name: Create download secrets file
      run: touch .faapriv/.download_secrets
      
    - name: Fill download secrets file
      env:
        DOWNLOAD_SECRETS_SECRET: |
         ${{ secrets.DOWNLOAD_SECRETS }}
      run: echo "$DOWNLOAD_SECRETS_SECRET" > .faapriv/.download_secrets

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build debug and preprod apks and run tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: --stacktrace :app:testDebugUnitTest

    - name: Upload build reports
      if: always() # run this step even if previous step failed
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: app/build/reports

    - name: Test Reports
      uses: dorny/test-reporter@v1
      if: always() # run this step even if previous step failed
      with:
          name: JUnit Tests
          path: app/build/test-results/testDebugUnitTest/TEST-*.xml # Path to test results
          reporter: java-junit # Format of test results
          fail-on-error: false
